[1mdiff --git a/api/reports/[id]/pdf.ts b/api/reports/[id]/pdf.ts[m
[1mindex 5636b83..5e89578 100644[m
[1m--- a/api/reports/[id]/pdf.ts[m
[1m+++ b/api/reports/[id]/pdf.ts[m
[36m@@ -3,6 +3,27 @@[m [mimport pool from '../../../backend/src/config/database';[m
 import { PDFService } from '../../../backend/src/services/pdfService';[m
 import jwt from 'jsonwebtoken';[m
 [m
[32m+[m[32m// Funci√≥n para sanitizar nombres de archivo (remover caracteres especiales)[m
[32m+[m[32mconst sanitizeFilename = (filename: string): string => {[m
[32m+[m[32m  return filename[m
[32m+[m[32m    .replace(/[√°√§√¢√†]/g, 'a')[m
[32m+[m[32m    .replace(/[√©√´√™√®]/g, 'e')[m
[32m+[m[32m    .replace(/[√≠√Ø√Æ√¨]/g, 'i')[m
[32m+[m[32m    .replace(/[√≥√∂√¥√≤]/g, 'o')[m
[32m+[m[32m    .replace(/[√∫√º√ª√π]/g, 'u')[m
[32m+[m[32m    .replace(/[√±]/g, 'n')[m
[32m+[m[32m    .replace(/[√Å√Ñ√Ç√Ä]/g, 'A')[m
[32m+[m[32m    .replace(/[√â√ã√ä√à]/g, 'E')[m
[32m+[m[32m    .replace(/[√ç√è√é√å]/g, 'I')[m
[32m+[m[32m    .replace(/[√ì√ñ√î√í]/g, 'O')[m
[32m+[m[32m    .replace(/[√ö√ú√õ√ô]/g, 'U')[m
[32m+[m[32m    .replace(/[√ë]/g, 'N')[m
[32m+[m[32m    .replace(/[^a-zA-Z0-9\s\-_\.]/g, '_') // Reemplazar caracteres especiales con _[m
[32m+[m[32m    .replace(/\s+/g, '_') // Reemplazar espacios con _[m
[32m+[m[32m    .replace(/_+/g, '_') // Reemplazar m√∫ltiples _ con uno solo[m
[32m+[m[32m    .trim();[m
[32m+[m[32m};[m
[32m+[m
 export default async function handler(req: VercelRequest, res: VercelResponse) {[m
   if (req.method !== 'GET') {[m
     return res.status(405).json({ error: 'Method not allowed' });[m
[36m@@ -90,7 +111,7 @@[m [mexport default async function handler(req: VercelRequest, res: VercelResponse) {[m
     // Enviar el PDF como respuesta[m
     const filename = `Reporte_${report.client_name}_${report.machine_type}_${new Date(report.report_date).toISOString().split('T')[0]}.pdf`;[m
     res.setHeader('Content-Type', 'application/pdf');[m
[31m-    res.setHeader('Content-Disposition', `attachment; filename="${filename}"`);[m
[32m+[m[32m    res.setHeader('Content-Disposition', `attachment; filename="${sanitizeFilename(filename)}"`);[m
     res.setHeader('Content-Length', pdfBuffer.length);[m
     res.status(200).send(pdfBuffer);[m
   } catch (error) {[m
